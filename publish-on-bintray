
plugins {
  id "com.jfrog.bintray" version "1.7.1"
}
apply plugin: 'maven-publish'

android.libraryVariants.all { variant ->
  task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
    description "Generates Javadoc for $variant.name."
    group "Documentation"
    source = variant.javaCompile.source
    classpath = files(variant.javaCompile.classpath.files) + files(android.bootClasspath) + files(variant.javaCompile.destinationDir)
    options.links("http://docs.oracle.com/javase/7/docs/api/");
    options.links("http://d.android.com/reference/");
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
  }
}

ext {
	// hardwiring this is ugly but it does work
    releaseSource = file('src/main/java/ch/poole/openinghoursfragment')
    releaseJavadoc = file('build/docs/javadoc')
}

task sourcesJar(type: Jar) {
	from releaseSource
	classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: 'generateReleaseJavadoc') {
	classifier = 'javadoc'
	from releaseJavadoc
	//	options.encoding = 'UTF-8'
}

group GROUP

publishing {
    publications {
        thisLibrary(MavenPublication) {
            groupId GROUP
            artifactId POM_ARTIFACT_ID
			artifact sourcesJar 
			artifact javadocJar 
			artifact("$buildDir/outputs/aar/" + POM_ARTIFACT_ID + *-release.aar")
			
			//The publication doesn't know about our dependencies, so we have to manually add them to the pom
			// see https://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
			pom.withXml {
    			def dependenciesNode = asNode().appendNode('dependencies')

    			//Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
    			configurations.compile.allDependencies.each {
        		def dependencyNode = dependenciesNode.appendNode('dependency')
        			dependencyNode.appendNode('groupId', it.group)
        			dependencyNode.appendNode('artifactId', it.name)
        			dependencyNode.appendNode('version', it.version)
    			}
			}
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = [thisLibrary]
    pkg {
        repo = 'android'
        name = "${libName}"
        licenses = ['BSD 3-Clause']
        vcsUrl = 'https://github.com/simonpoole/' + POM_ARTIFACT_ID + '.git'
        version {
        	name = "${project.version}"
			released  = new Date()
			gpg {
				sign = true //Determines whether to GPG sign the files. The default is false
				passphrase = System.getenv('BINTRAY_PASSPHRASE')
			}
        }
    }
}
